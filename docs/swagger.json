{
  "swagger": "2.0",
  "host": "firefly-tvm-stage.adobe.io",
  "info": {
    "title": "Adobe I/O Token Vending Machine",
    "version": "1"
  },
  "definitions": {
    "Error": {
      "properties": {
        "error": {
          "description": "error message",
          "type": "string"
        }
      },
      "required": [ "error" ]
    },
    "AwsS3Token": {
      "description": "token that gives access to a s3 bucket",
      "properties": {
        "expiration": {
          "description": "expiration date in ISO/UTC format",
          "type": "string"
        },
        "secretAccessKey": {
          "description": "aws secret key",
          "type": "string"
        },
        "accessKeyId": {
          "description": "aws access key id",
          "type": "string"
        },
        "sessionToken": {
          "description": "aws session token",
          "type": "string"
        },
        "params": {
          "description": "aws js sdk params",
          "type": "object",
          "properties": {
            "Bucket": {
              "description": "name of accessible s3 bucket",
              "type": "string"
            }
          }
        }
      },
      "required": [ "params", "expiration", "sessionToken", "accessKeyId", "secretAccessKey" ]
    },
    "AzureBlobToken": {
      "description": "token allowing access to a two azure blob containers for storing public and private",
      "properties": {
        "expiration": {
          "description": "expiration date in ISO/UTC format",
          "type": "string"
        },
        "sasURLPrivate": {
          "description": "sas url to access private azure blob container",
          "type": "string"
        },
        "sasURLPublic": {
          "description": "sas url to access public azure blob container",
          "type": "string"
        }
      },
      "required": [ "expiration", "sasURLPublic", "sasURLPrivate" ]
    },
    "AzureBlobSignature": {
      "description": "Presigned-Url for accessing an Azure blob",
      "properties": {
        "signature": {
          "description": "Access signature for the Blob",
          "type": "string"
        }
      },
      "required": [ "signature" ]
    },
    "AzureCosmosToken": {
      "description": "token allowing access to a specific cosmos db partition key",
      "properties": {
        "expiration": {
          "description": "expiration date in ISO/UTC format",
          "type": "string"
        },
        "endpoint": {
          "description": "allowed cosmosdb resource endpoint",
          "type": "string"
        },
        "databaseId": {
          "description": "id for allowed cosmosdb database",
          "type": "string"
        },
        "container": {
          "description": "id for allowed cosmosdb container",
          "type": "string"
        },
        "partitionKey": {
          "description": "allowed cosmosdb partition key",
          "type": "string"
        },
        "resourceToken": {
          "description": "cosmosdb resource token",
          "type": "string"
        }
      },
      "required": [ "resourceToken", "partitionKey", "container", "databaseId", "endpoint", "expiration" ]
    },
    "AdminAllToken": {
      "description": "object of tokens allowing access to an OpenWhisk namespace's cloud resources",
      "properties": {
        "awsS3": {
          "$ref": "#/definitions/AwsS3Token"
        },
        "azureBlob": {
          "$ref": "#/definitions/AzureBlobToken"
        },
        "azureCosmos": {
          "$ref": "#/definitions/AzureCosmosToken"
        }
      }
    }
  },
  "paths": {
    "/aws/s3/{owNamespace}": {
      "get": {
        "produces": [ "application/json" ],
        "operationId": "GetTokenForAwsS3",
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "type": "string",
            "required": true,
            "format": "owAuth",
            "description": "OpenWhisk Basic auth in base 64 format, e.g. `Basic ZmFrZWF1dGg=`"
          },
          {
            "in": "path",
            "name": "owNamespace",
            "type": "string",
            "required": true,
            "format": "owNamespace",
            "description": "OpenWhisk namespace"
          }
        ],
        "responses": {
          "400": {
            "description": "bad request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "unauthorized request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "200": {
            "description": "tokens to access aws s3",
            "schema": {
              "$ref": "#/definitions/AwsS3Token"
            }
          }
        }
      }
    },
    "/azure/blob/{owNamespace}": {
      "get": {
        "produces": [ "application/json" ],
        "operationId": "GetTokenForAzureBlob",
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "type": "string",
            "required": true,
            "format": "owAuth",
            "description": "OpenWhisk Basic auth in base 64 format, e.g. `Basic ZmFrZWF1dGg=`"
          },
          {
            "in": "path",
            "name": "owNamespace",
            "type": "string",
            "required": true,
            "format": "owNamespace",
            "description": "OpenWhisk namespace"
          }
        ],
        "responses": {
          "400": {
            "description": "bad request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "forbidden request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "200": {
            "description": "tokens to access azure blob",
            "schema": {
              "$ref": "#/definitions/AzureBlobToken"
            }
          }
        }
      }
    },
    "/azure/presign/{owNamespace}": {
      "get": {
        "produces": [ "application/json" ],
        "operationId": "GetPresignedUrlForAzureBlob",
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "type": "string",
            "required": true,
            "format": "owAuth",
            "description": "OpenWhisk Basic auth in base 64 format, e.g. `Basic ZmFrZWF1dGg=`"
          },
          {
            "in": "path",
            "name": "owNamespace",
            "type": "string",
            "required": true,
            "format": "owNamespace",
            "description": "OpenWhisk namespace"
          },
          {
            "in": "query",
            "name": "expiryInSeconds",
            "type": "integer",
            "required": true,
            "format": "expiryInSeconds",
            "description": "Pre-signed URL expiration time in seconds"
          },
          {
            "in": "query",
            "name": "blobName",
            "type": "string",
            "required": true,
            "format": "blobName",
            "description": "Name of the blob to create the pre-signed URL for"
          },
          {
            "in": "query",
            "name": "permissions",
            "type": "string",
            "required": true,
            "format": "permissions",
            "description": "Blob access permissions for the pre-signed URL, e.g permissions='rwd' for read, write, delete"
          }
        ],
        "responses": {
          "400": {
            "description": "bad request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "forbidden request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "200": {
            "description": "signature to access a single azure blob",
            "schema": {
              "$ref": "#/definitions/AzureBlobSignature"
            }
          }
        }
      }
    },
    "/azure/cosmos/{owNamespace}": {
      "get": {
        "produces": [ "application/json" ],
        "operationId": "GetTokenForAzureCosmos",
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "type": "string",
            "required": true,
            "format": "owAuth",
            "description": "OpenWhisk Basic auth in base 64 format, e.g. `Basic ZmFrZWF1dGg=`"
          },
          {
            "in": "path",
            "name": "owNamespace",
            "type": "string",
            "required": true,
            "format": "owNamespace",
            "description": "OpenWhisk namespace"
          }
        ],
        "responses": {
          "400": {
            "description": "bad request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "forbidden request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "200": {
            "description": "tokens to access azure cosmos",
            "schema": {
              "$ref": "#/definitions/AzureCosmosToken"
            }
          }
        }
      }
    },
    "/admin/{owNamespace}/all/{requestedOwNamespace}": {
      "get": {
        "description": "Allows a requester running from the same OpenWhisk namespace as the deployed TVM to request all cloud credentials for an OpenWhisk namespace.\n**NOTE:** This endpoint does not honor `APPROVED_LIST`",
        "produces": [
          "application/json"
        ],
        "operationId": "GetTokenForAdminAll",
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "type": "string",
            "required": true,
            "format": "owAuth",
            "description": "OpenWhisk Basic auth in base 64 format, e.g. `Basic ZmFrZWF1dGg=`"
          },
          {
            "in": "path",
            "name": "owNamespace",
            "type": "string",
            "required": true,
            "format": "owNamespace",
            "description": "OpenWhisk namespace"
          },
          {
            "in": "path",
            "name": "requestedOwNamespace",
            "type": "string",
            "required": true,
            "format": "requestedOwNamespace",
            "description": "Requested OpenWhisk namespace"
          }
        ],
        "responses": {
          "200": {
            "description": "tokens to access azure cosmos",
            "schema": {
              "$ref": "#/definitions/AdminAllToken"
            }
          },
          "400": {
            "description": "bad request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "forbidden request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    }
  }
}