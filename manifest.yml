packages:
  tvm:
    actions:
      aws-s3:
        function: actions/aws-s3/index.js
        web: yes
        runtime: 'nodejs:14'
        inputs:
          s3Bucket: $S3_BUCKET
          awsSecretAccessKey: $AWS_SECRET_ACCESS_KEY
          awsAccessKeyId: $AWS_ACCESS_KEY_ID
          expirationDuration: $EXPIRATION_DURATION
          owApihost: $AIO_RUNTIME_APIHOST
          approvedList: $APPROVED_LIST
          imsEnv: $IMS_ENV
          disableAdobeIOApiGwTokenValidation: $DISABLE_ADOBE_IO_API_GW_TOKEN_VALIDATION
          metricsUrl: $METRICS_URL
        annotations:
          # this is important security wise
          final: true
      azure-blob:
        function: actions/azure-blob/index.js
        web: yes
        runtime: 'nodejs:14'
        inputs:
          azureStorageAccount: $AZURE_STORAGE_ACCOUNT
          azureStorageAccessKey: $AZURE_STORAGE_ACCESS_KEY
          expirationDuration: $EXPIRATION_DURATION
          owApihost: $AIO_RUNTIME_APIHOST
          approvedList: $APPROVED_LIST
          imsEnv: $IMS_ENV
          disableAdobeIOApiGwTokenValidation: $DISABLE_ADOBE_IO_API_GW_TOKEN_VALIDATION
          metricsUrl: $METRICS_URL
        annotations:
          # this is important security wise
          final: true
      azure-presign:
        function: actions/azure-presign/index.js
        web: yes
        runtime: 'nodejs:14'
        inputs:
          azureStorageAccount: $AZURE_STORAGE_ACCOUNT
          azureStorageAccessKey: $AZURE_STORAGE_ACCESS_KEY
          expirationDuration: $EXPIRATION_DURATION
          owApihost: $AIO_RUNTIME_APIHOST
          approvedList: $APPROVED_LIST
          imsEnv: $IMS_ENV
          disableAdobeIOApiGwTokenValidation: $DISABLE_ADOBE_IO_API_GW_TOKEN_VALIDATION
          metricsUrl: $METRICS_URL
        annotations:
          # this is important security wise
          final: true
      azure-revoke:
        function: actions/azure-revoke/index.js
        web: yes
        runtime: 'nodejs:14'
        inputs:
          azureStorageAccount: $AZURE_STORAGE_ACCOUNT
          azureStorageAccessKey: $AZURE_STORAGE_ACCESS_KEY
          expirationDuration: $EXPIRATION_DURATION
          owApihost: $AIO_RUNTIME_APIHOST
          approvedList: $APPROVED_LIST
          imsEnv: $IMS_ENV
          disableAdobeIOApiGwTokenValidation: $DISABLE_ADOBE_IO_API_GW_TOKEN_VALIDATION
          metricsUrl: $METRICS_URL
        annotations:
          # this is important security wise
          final: true
      azure-cosmos:
        function: actions/azure-cosmos/index.js
        web: yes
        runtime: 'nodejs:14'
        inputs:
          azureCosmosMasterKey: $AZURE_COSMOS_MASTER_KEY
          azureCosmosAccount: $AZURE_COSMOS_ACCOUNT
          azureCosmosDatabaseId: $AZURE_COSMOS_DATABASE_ID
          azureCosmosContainerId: $AZURE_COSMOS_CONTAINER_ID
          expirationDuration: $EXPIRATION_DURATION
          owApihost: $AIO_RUNTIME_APIHOST
          approvedList: $APPROVED_LIST
          imsEnv: $IMS_ENV
          disableAdobeIOApiGwTokenValidation: $DISABLE_ADOBE_IO_API_GW_TOKEN_VALIDATION
          metricsUrl: $METRICS_URL
        annotations:
          # this is important security wise
          final: true
    apis:
      tvm-azure-blob:
        tvm:
          azure/blob/{owNamespace}:
            azure-blob:
              method: GET
              response: http
      tvm-azure-presign:
        tvm:
          azure/presign/{owNamespace}:
            azure-presign:
              method: GET
              response: http
      tvm-azure-revoke:
        tvm:
          azure/revoke/{owNamespace}:
            azure-revoke:
              method: GET
              response: http
      tvm-azure-cosmos:
        tvm:
          azure/cosmos/{owNamespace}:
            azure-cosmos:
              method: GET
              response: http
      tvm-aws-s3:
        tvm:
          aws/s3/{owNamespace}:
            aws-s3:
              method: GET
              response: http
